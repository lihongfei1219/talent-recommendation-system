我想做一个微信小程序，需要用java和uniapp的技术，但是其他人也会做，有一些人会做前端，也有一些人会做后端，但是后端和前端的人却少，大部分人都会一点点，想要精通java却是很难的，还有unipp也很难，我不是很会
我想做
我想做
我想做
的
的
的
的
的
的
人才
人才
人才
人才
1，Java的设计模式，在Java技术中，Java设计模式算是老生常谈了，但是它为所有的Java程序员都立了一座里程碑，我们每一个Java程序员都有必要熟练常用的设计模式，这些设计思想对于我们大家多来算是比较被看重的。
我想找一个能做冲压发动机的人才
冲压发动机冲压发动机
冲压发动机
冲压发动机
冲压发动机
冲压发动机

2，ElasticSearch是一款。。。。不再赘述了，一会儿该有人说我是打广告的了。具体的信息自行百度或查看官网教程。

3，Rxjava是一款链式编程风格和异步结合在一起的Android框架，首先，RxJava1.0和RxJava2.0的核心思想都是观察者模式，只不过RxJava2.0在RxJava1.0的基础对一些方法进行了优化，方便于开发者更好地理解其编程思想，同时又增加了一部分新的方法解决1.0存在的问题，例如背压等。地址：https://github.com/ReactiveX/RxJava

4，Spring Boot是由Pivotal团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。用我的话来理解，就是spring boot其实不是什么新的框架，它默认配置了很多框架的使用方式，就像maven整合了所有的jar包，spring boot整合了所有的框架（不知道这样比喻是否合适），最大的简化就是不再会有一大堆的xml配置文件，一个yml就能解决一切问题，一个不够就来两个（^_^），最大的优点在于注解开发，写restful接口做restful API开发时，真是太方便了。官网
可见Dubbo是一个SOA服务（RPC框架），它的出现推动了SOA的开发热潮。

Dubbo最早是阿里的一个开源项目，由阿里的一个团队负责开发维护，后来由于某些商业原因，阿里停止了对于Dubbo的维护，但是当当网为了这个开源项目不会被废弃，开始了对于dubbo的后续维护，之后为了避免侵权改名为Dubbox；现在Dubbo已经被阿里巴巴贡献给Apache来做开源维护，这个项目结构更新之后完全不同了，但是有了专业的团队进行维护，相信这个技术会也来越好。下面简单看一下dubbo的未来规划：
面试官：谈谈你自己对Spring的理解吧！

我：我觉得Spring就是个万用排插，可以对接几乎一切的开源接口。像我接触过的项目有规则引擎，做推荐，做营销活动，做秒杀等等。

面试官：你为什么用Spring？
我：Spring的优点很多，比如方便解耦，简化开发，但是对我来说主要还是避免重复造轮子！

Spring可以说已经是业界标准了，经过了无数项目的实战检验。遇到问题也可以向全世界的开发人员请教，可以帮忙指出思路或解决方案；

还有就是学习Spring的理念，我经常会研究Spring的源码，对自己的Java技术水平和应用开发水平提升很大。Spring框架源码是Java技术的最佳实践范例。

面试官：我很赞同！我们来问问比较细的点，@Transactional到底做了什么事？

我：保证事务的完整性，结合ACID了解。

面试官：@Transactional一定能保证事务的ACID么？

我：不一定，默认情况下，回滚时，只会回滚Error与RuntimeExcetption。

面试官：Spring有几种事务的实现方式，为什么说加了@Transactional注解的业务方法里不适合有长调用？

我：排除自定义事务管理器的话，Spring提供了2种事务管理方式，分别为声明式事务@Transactional（注解式）和编程式事务，如果使用声明式事务，在源码中（省略500字），正常情况下，只有业务方法整体执行完成，才会释放数据库连接，如果业务方法中的长连接调用时间要10s，那么意味着至少10s，当前的数据库连接是无法释放的，数据库连接是很宝贵的资源（省略100字）。

面试官：Spring的事务传播属性是如何实现的？

我：结合数据库连接去理解，我们在工作中常用的，有REQUIRED,REQUIRES_NEW,NESTED三种传播属性，在Spring底层实现中，它会根据传播属性的不同，去使用数据库连接，在源码中（省略500字），我们使用时，应该根据业务进行具体判断。

面试官：Spring的事务隔离级别是如何实现的？
做程序员难，做一个2020年的程序员更难，随着IT人员越来越多，我们的竞争压力也越来越大，想要在茫茫人海中脱颖而出，其实考察的就是我们技术栈的广度和深度。

Spring框架为开发Java应用程序提供了全面的基础架构支持。Spring包含了一些很好的功能，如依赖注入和开箱即用的模块：
想
Spring 框架的问世，给我们提供了很好的扩展性、易维护性，给我们的开发提供了便利，效率的提高，节省时间。
想
Spring的用途不仅限于服务器端的开发。从简单性、可测试性和松耦合的角度而言，任何Java应用都可以从Spring中受益。

Spring框架为开发Java应用程序提供了全面的基础架构支持。Spring包含了一些很好的功能，如依赖注入和开箱即用的模块，这些模块能极大缩短应用程序的开发时间，提高我们的工作效率。
人才想
做Java的人，应该都听说过一句话：Spring重新定义了Java。
三、计算机体系结构和计算机组成
想
想
想
计算机体系结构：程序员所见到的计算机系统的属性概念性的结构与功能特性（指令系统、数据类型、寻址技术、I/O机理）
计算机组成：实现计算机体系结构所体现的属性（具体指令的实现）
1.2计算机的基本组成
冯·诺依曼计算机，以运算器为中心。
计算机由五大部件组成
指令和数据以同等地位存于存储器，可按地址寻访
指令和数据用二进制表示
指令由操作码和地址码组成
存储程序
以运算器为中心
现代计算机，以存储器为中心的计算机
存储器的基本组成
主存储器、MAR、MDR、存储体。
MAR：存储器地址寄存器反映存储单元的个数
MDR：存储器数据寄存器反映存储字长
总线的分类
找
找
找
找
找

片内总线：芯片内部的总线
系统总线：计算机各部件之间的信息传输线
数据总线：双向 与机器字长、存储字长有关
地址总线：单向 与存储地址、I/O地址有关，由CPU发出
控制总线：有出 有入，存储器读、存储器写、总线允许、中断确认
通信总线
用于计算机系统之间或计算机系统与其他系统（如控制仪表、移动通信等）之间的通信
传输方式：串行通信总线、并行通信总线。
总线的特性和性能指标
Spring底层到底要看什么？以下是我的学习笔记，给大家分享一下，希望可以对你掌握Spring有所帮助。（xmind格式可在文末获取）
我：高并发场景下，为了保证竞争资源的安全性，就会考虑隔离级别的问题，结合您刚才问到的事务的传播属性，实际隔离级别这个问题，我觉得结合数据库的MVCC&LBCC（省略500字），来结合业务场景会更加合适。
人才
人才
人才
人才